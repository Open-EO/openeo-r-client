% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{unary_ops}
\alias{unary_ops}
\alias{abs.ProcessNode}
\alias{abs.ProcessGraphParameter}
\alias{sign.ProcessNode}
\alias{sign.ProcessGraphParameter}
\alias{sqrt.ProcessNode}
\alias{sqrt.ProcessGraphParameter}
\alias{trunc.ProcessNode}
\alias{trunc.ProcessGraphParameter}
\alias{floor.ProcessNode}
\alias{floor.ProcessGraphParameter}
\alias{ceiling.ProcessNode}
\alias{ceiling.ProcessGraphParameter}
\alias{round.ProcessNode}
\alias{round.ProcessGraphParameter}
\alias{exp.ProcessNode}
\alias{exp.ProcessGraphParameter}
\alias{log.ProcessNode}
\alias{log.ProcessGraphParameter}
\alias{log10.ProcessNode}
\alias{log10.ProcessGraphParameter}
\alias{cos.ProcessNode}
\alias{cos.ProcessGraphParameter}
\alias{sin.ProcessNode}
\alias{sin.ProcessGraphParameter}
\alias{tan.ProcessNode}
\alias{tan.ProcessGraphParameter}
\alias{cosh.ProcessNode}
\alias{cosh.ProcessGraphParameter}
\alias{sinh.ProcessNode}
\alias{sinh.ProcessGraphParameter}
\alias{tanh.ProcessNode}
\alias{tanh.ProcessGraphParameter}
\alias{acos.ProcessNode}
\alias{acos.ProcessGraphParameter}
\alias{asin.ProcessNode}
\alias{asin.ProcessGraphParameter}
\alias{atan.ProcessNode}
\alias{atan.ProcessGraphParameter}
\alias{acosh.ProcessNode}
\alias{acosh.ProcessGraphParameter}
\alias{asinh.ProcessNode}
\alias{asinh.ProcessGraphParameter}
\alias{atanh.ProcessNode}
\alias{atanh.ProcessGraphParameter}
\alias{cumsum.ProcessNode}
\alias{cumsum.ProcessGraphParameter}
\alias{cummin.ProcessNode}
\alias{cummin.ProcessGraphParameter}
\alias{cummax.ProcessNode}
\alias{cummax.ProcessGraphParameter}
\alias{cumprod.ProcessNode}
\alias{cumprod.ProcessGraphParameter}
\alias{[.ProcessGraphParameter}
\alias{!.ProcessNode}
\alias{!.ProcessGraphParameter}
\alias{quantile.ProcessNode}
\alias{quantile.ProcessGraphParameter}
\title{Unary function wrappers}
\usage{
\method{abs}{ProcessNode}(x)

\method{abs}{ProcessGraphParameter}(x)

\method{sign}{ProcessNode}(x)

\method{sign}{ProcessGraphParameter}(x)

\method{sqrt}{ProcessNode}(x)

\method{sqrt}{ProcessGraphParameter}(x)

\method{trunc}{ProcessNode}(x, ...)

\method{trunc}{ProcessGraphParameter}(x, ...)

\method{floor}{ProcessNode}(x)

\method{floor}{ProcessGraphParameter}(x)

\method{ceiling}{ProcessNode}(x)

\method{ceiling}{ProcessGraphParameter}(x)

\method{round}{ProcessNode}(x, digits = 0)

\method{round}{ProcessGraphParameter}(x, digits = 0)

\method{exp}{ProcessNode}(x)

\method{exp}{ProcessGraphParameter}(x)

\method{log}{ProcessNode}(x, base = exp(1))

\method{log}{ProcessGraphParameter}(x, base = exp(1))

log10.ProcessNode(x)

log10.ProcessGraphParameter(x)

\method{cos}{ProcessNode}(x)

\method{cos}{ProcessGraphParameter}(x)

\method{sin}{ProcessNode}(x)

\method{sin}{ProcessGraphParameter}(x)

\method{tan}{ProcessNode}(x)

\method{tan}{ProcessGraphParameter}(x)

\method{cosh}{ProcessNode}(x)

\method{cosh}{ProcessGraphParameter}(x)

\method{sinh}{ProcessNode}(x)

\method{sinh}{ProcessGraphParameter}(x)

\method{tanh}{ProcessNode}(x)

\method{tanh}{ProcessGraphParameter}(x)

\method{acos}{ProcessNode}(x)

\method{acos}{ProcessGraphParameter}(x)

\method{asin}{ProcessNode}(x)

\method{asin}{ProcessGraphParameter}(x)

\method{atan}{ProcessNode}(x)

\method{atan}{ProcessGraphParameter}(x)

\method{acosh}{ProcessNode}(x)

\method{acosh}{ProcessGraphParameter}(x)

\method{asinh}{ProcessNode}(x)

\method{asinh}{ProcessGraphParameter}(x)

\method{atanh}{ProcessNode}(x)

\method{atanh}{ProcessGraphParameter}(x)

\method{cumsum}{ProcessNode}(x)

\method{cumsum}{ProcessGraphParameter}(x)

\method{cummin}{ProcessNode}(x)

\method{cummin}{ProcessGraphParameter}(x)

\method{cummax}{ProcessNode}(x)

\method{cummax}{ProcessGraphParameter}(x)

\method{cumprod}{ProcessNode}(x)

\method{cumprod}{ProcessGraphParameter}(x)

\method{[}{ProcessGraphParameter}(x, i, ..., drop = TRUE)

\method{!}{ProcessNode}(x)

\method{!}{ProcessGraphParameter}(x)

\method{quantile}{ProcessNode}(x, ...)

\method{quantile}{ProcessGraphParameter}(x, ...)
}
\arguments{
\item{x}{\code{ProcessGraphParameter}, \code{ProcessNode} or a list or vector. Passes internal data to the function}

\item{...}{further arguments to pass on, see the documentation of primitive functions of R for further information}

\item{digits}{the amount of decimal digits to round to}

\item{base}{the base of the exponential operation}

\item{i}{the index of the element in a vector or list}

\item{drop}{listed for completeness but not used in openEO processes.}
}
\value{
a \code{ProcessNode}
}
\description{
The functions here are used in combination with \code{ProcessGraphParameter} and \code{ProcessNode} and facilitate
writing arithmetic functions for openEO user defined processes in R. The functions translate into their openEO
processes counterparts.
}
